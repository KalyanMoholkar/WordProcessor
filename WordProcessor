using System;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Author
{
    class WordProcessor
    {
        static void Main()
        {
            try
            { 
                    Console.WriteLine("Enter a sentence and press enter to count occurences of word");
                    Console.WriteLine("\nInput:\n--------------------");            
                    //Enter the sentence
                    var strSentence = Console.ReadLine();
            
                    //Check if the sentence is blank
                    if (strSentence.Trim().Length <= 0)
                    {
                        Console.WriteLine("You have entered blank sentence. Please try again..!");
                        Console.WriteLine("\nInput:\n--------------------"); 
                        strSentence = Console.ReadLine();
                    }

                    //Calculate the occurrences of word in sentences 
                    CountOccurrencesInSentence(strSentence);                       
            
                    Console.WriteLine("\n\nPress enter to exit..");  
                    Console.ReadLine();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error occured :" + ex.Message);  
            }
        }
        public static void CountOccurrencesInSentence(string strSentence)
        {
            try
            {
                //split options  "space" seperated values or any special character if want to omit them 
                var arrayOfSplitOptions = new string[] { " ", ",", "." };

                //Fill the words in array (replace "," in sentence, remove empty entries)
                var arrayOfWords = strSentence.ToLower().Replace(",", "").Split(arrayOfSplitOptions, StringSplitOptions.RemoveEmptyEntries);

                //Fill key (word), value (count) pairs  Dictionary<string, int> 
                var dictionary = arrayOfWords.GroupBy(x => x).ToDictionary(g => g.Key, g => g.Count());

                //Iterate the dictionary 
                Console.WriteLine("\nOutput:\n--------------------");
                foreach (KeyValuePair<string, int> item in dictionary)
                {
                    Console.WriteLine("{0} - {1}", item.Key, item.Value);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error occured in CountOccurrencesInSentence:" + ex.Message);
                throw;
            }
        }
    }
 }
