using System;
using System.Collections.Generic;
using System.Linq;

namespace Author
{
    public interface IWordProcessor
    { 
       Dictionary<string,int>  CalculateWordCount(string line);
       void DisplayWordCount(Dictionary<string, int> dictionary);        
    }

    public  class WordProcessor: IWordProcessor 
    {
       
        public  void DisplayWordCount(Dictionary<string, int> dictionary)
        {
                //Iterate the dictionary 
            Console.WriteLine("\nOutput:\n--------------------");
                foreach (KeyValuePair<string, int> item in dictionary)
                {
                    Console.WriteLine   (item.Key + " - "+  item.Value);
                }
         
        }
        public Dictionary<string, int> CalculateWordCount(string line)
        {
                //split options  "space" seperated values or any special character if want to omit them 
                var arrayOfSplitOptions = new string[] { " ", ",", "." };

                //Fill the words in array (replace "," in sentence, remove empty entries)
                var arrayOfWords = line.ToLower().Replace(",", "").Split(arrayOfSplitOptions, StringSplitOptions.RemoveEmptyEntries);

                //Fill key (word), value (count) pairs  Dictionary<string, int> 
                var dictionary = arrayOfWords.GroupBy(x => x).ToDictionary(g => g.Key, g => g.Count());

                return dictionary;
            
        }
    }
 }
